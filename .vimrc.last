" always use curr. dir.
"set autochdir
"let g:netrw_keepdir=0

" quick throwaway macro
nnoremap Q @q

" Y by default is alias for yy, make it consistent with C and D
map Y y$

" https://github.com/reedes/vim-lexical
let g:lexical#thesaurus = ['~/.vim/thesaurus/mthesaur.txt',]
let g:lexical#thesaurus_key = '<leader>t'

augroup lexical
    autocmd!
    autocmd FileType markdown call lexical#init({'spell': 0})
    autocmd FileType tex call lexical#init({'spell': 0})
augroup END

" replace horrible func( arg ) with func(arg) etc
function! FixSurround()
    %s/( \(.*\) )/(\1)/e
    %s/< \(.*\) >/<\1>/e
    %s/\[ \(.*\) \]/[\1]/e
    %s/ )/)/e
    %s/( /(/e
endfunction

augroup RainbowParentheses
    let blacklist = []
    autocmd!
    autocmd VimEnter * if index(blacklist, &ft) < 0 | RainbowParenthesesToggle
    autocmd FileType * if index(blacklist, &ft) < 0 | RainbowParenthesesLoadRound
    autocmd FileType * if index(blacklist, &ft) < 0 | RainbowParenthesesLoadSquare
    autocmd FileType * if index(blacklist, &ft) < 0 | RainbowParenthesesLoadBraces
augroup END

" Syntastic
let g:syntastic_cpp_check_header = 1
let g:syntastic_cpp_compiler_options = ' -std=c++0x'

" vim-markdown
let g:vim_markdown_new_list_item_indent = 0

" Vim Markdown Preview - requires 'grip' Python package
let vim_markdown_preview_github = 1
let vim_markdown_preview_hotkey = '<leader>m'
let vim_markdown_preview_temp_file = 1
